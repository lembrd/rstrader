name: Build and Publish Docker Image (Docker Build Cloud)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch: {}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: false

env:
  # Full Docker Hub repository name, e.g. "yourorg/xtrader"
  DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx (Docker Build Cloud)
        uses: docker/setup-buildx-action@v3
        with:
          driver: cloud
          endpoint: ${{ secrets.DOCKER_CLOUD_ORG }}/${{ secrets.DOCKER_CLOUD_BUILDER }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPOSITORY }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=branch,branch=main
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Build and push (multi-arch via Build Cloud)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Remote registry cache to accelerate rebuilds
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPOSITORY }}:buildcache,mode=max

      - name: Inspect multi-arch manifest
        run: docker buildx imagetools inspect ${{ env.DOCKERHUB_REPOSITORY }}:latest | cat

